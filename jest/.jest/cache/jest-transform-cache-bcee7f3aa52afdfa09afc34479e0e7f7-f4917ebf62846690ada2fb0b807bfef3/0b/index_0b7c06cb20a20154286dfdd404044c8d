258bb55ad773b79d97c3b125d18785cd
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var lodash_1 = require("lodash");
var filterUniqueLinks = function (links) {
    var alreadySeen = {};
    return lodash_1.uniqBy(links, function (_a) {
        var source = _a.source, target = _a.target;
        return source + target;
    }).filter(function (_a) {
        var source = _a.source, target = _a.target;
        var key = source + target;
        var reverse = target + source;
        if (alreadySeen[key] || alreadySeen[reverse]) {
            return false;
        }
        else {
            alreadySeen[key] = true;
            alreadySeen[reverse] = true;
            return true;
        }
    });
};
var getMagentaNode = function (id) { return ({
    id: id,
    color: 'magenta',
}); };
var getGreenNode = function (id) { return ({
    id: id,
    color: 'green',
}); };
var getAdjacentWords = function (wordWithNoSpaces, subWordMappedToCompoundWords) {
    var adjacentWords = subWordMappedToCompoundWords[wordWithNoSpaces];
    if (adjacentWords) {
        return lodash_1.uniq(adjacentWords.concat([wordWithNoSpaces]));
    }
    else {
        return [];
    }
};
exports.getGraphDataForCompoundWord = function (compoundWord, wordsWithoutSpacesMappedToCompoundWords) {
    var adjacentWords = lodash_1.flatten(compoundWord
        .split(' ')
        .map(function (x) {
        return getAdjacentWords(x, wordsWithoutSpacesMappedToCompoundWords);
    })).concat([
        compoundWord,
    ]);
    var links = [];
    var compoundWords = adjacentWords.filter(function (wordText) { return wordText.split(' ').length !== 1; });
    var singularWords = adjacentWords.filter(function (wordText) { return wordText.split(' ').length === 1; });
    var compoundNodes = compoundWords.map(function (wordText) {
        var hiddenAdjacentNodes = wordText
            .split(' ')
            .map(function (v) {
            return getAdjacentWords(v, wordsWithoutSpacesMappedToCompoundWords).filter(function (adj) { return !adjacentWords.includes(adj); });
        });
        return tslib_1.__assign({}, getGreenNode(wordText), { hiddenAdjacentNodes: hiddenAdjacentNodes });
    });
    var nodes = singularWords.map(getMagentaNode).concat(compoundNodes);
    adjacentWords.forEach(function (word) {
        var subwords = word.split(' ');
        var otherWordsSharingSubwords = lodash_1.flatten(subwords.map(function (sub) {
            var otherWordsWithSub = adjacentWords.filter(function (target) { return target === sub; });
            return otherWordsWithSub.map(function (otherWord) { return ({
                source: word,
                target: otherWord,
            }); });
        })).filter(function (_a) {
            var source = _a.source, target = _a.target;
            return source !== target;
        });
        links = links.concat(otherWordsSharingSubwords);
    });
    var uniqueLinks = filterUniqueLinks(links);
    return { links: uniqueLinks, nodes: nodes };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3hhbmRlcmZlaHNlbmZlbGQvRGVza3RvcC92aWV0bmFtZXNlLWVuZ2xpc2gvc3JjL2NsaWVudC9jb21wb25lbnRzL1dvcmRHcmFwaC9saWIvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsaUNBQThDO0FBRTlDLElBQU0saUJBQWlCLEdBQUcsVUFBQyxLQUFrQjtJQUMzQyxJQUFNLFdBQVcsR0FBK0IsRUFBRSxDQUFBO0lBRWxELE9BQU8sZUFBTSxDQUFDLEtBQUssRUFBRSxVQUFDLEVBQWtCO1lBQWhCLGtCQUFNLEVBQUUsa0JBQU07UUFBTyxPQUFBLE1BQU0sR0FBRyxNQUFNO0lBQWYsQ0FBZSxDQUFDLENBQUMsTUFBTSxDQUNsRSxVQUFDLEVBQWtCO1lBQWhCLGtCQUFNLEVBQUUsa0JBQU07UUFDZixJQUFNLEdBQUcsR0FBRyxNQUFNLEdBQUcsTUFBTSxDQUFBO1FBQzNCLElBQU0sT0FBTyxHQUFHLE1BQU0sR0FBRyxNQUFNLENBQUE7UUFDL0IsSUFBSSxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQzVDLE9BQU8sS0FBSyxDQUFBO1NBQ2I7YUFBTTtZQUNMLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUE7WUFDdkIsV0FBVyxDQUFDLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQTtZQUMzQixPQUFPLElBQUksQ0FBQTtTQUNaO0lBQ0gsQ0FBQyxDQUNGLENBQUE7QUFDSCxDQUFDLENBQUE7QUFFRCxJQUFNLGNBQWMsR0FBRyxVQUFDLEVBQVUsSUFBSyxPQUFBLENBQUM7SUFDdEMsRUFBRSxJQUFBO0lBQ0YsS0FBSyxFQUFFLFNBQVM7Q0FDakIsQ0FBQyxFQUhxQyxDQUdyQyxDQUFBO0FBRUYsSUFBTSxZQUFZLEdBQUcsVUFBQyxFQUFVLElBQUssT0FBQSxDQUFDO0lBQ3BDLEVBQUUsSUFBQTtJQUNGLEtBQUssRUFBRSxPQUFPO0NBQ2YsQ0FBQyxFQUhtQyxDQUduQyxDQUFBO0FBRUYsSUFBTSxnQkFB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RUFBRSxXQUFXLEVBQUUsS0FBSyxPQUFBLEVBQUUsQ0FBQTtBQUN0QyxDQUFDLENBQUEiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL3hhbmRlcmZlaHNlbmZlbGQvRGVza3RvcC92aWV0bmFtZXNlLWVuZ2xpc2gvc3JjL2NsaWVudC9jb21wb25lbnRzL1dvcmRHcmFwaC9saWIvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhEYXRhLCBHcmFwaExpbmsgfSBmcm9tICcuLidcbmltcG9ydCB7IGZsYXR0ZW4sIHVuaXFCeSwgdW5pcSB9IGZyb20gJ2xvZGFzaCdcblxuY29uc3QgZmlsdGVyVW5pcXVlTGlua3MgPSAobGlua3M6IEdyYXBoTGlua1tdKSA9PiB7XG4gIGNvbnN0IGFscmVhZHlTZWVuOiB7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfSA9IHt9XG5cbiAgcmV0dXJuIHVuaXFCeShsaW5rcywgKHsgc291cmNlLCB0YXJnZXQgfSkgPT4gc291cmNlICsgdGFyZ2V0KS5maWx0ZXIoXG4gICAgKHsgc291cmNlLCB0YXJnZXQgfSkgPT4ge1xuICAgICAgY29uc3Qga2V5ID0gc291cmNlICsgdGFyZ2V0XG4gICAgICBjb25zdCByZXZlcnNlID0gdGFyZ2V0ICsgc291cmNlXG4gICAgICBpZiAoYWxyZWFkeVNlZW5ba2V5XSB8fCBhbHJlYWR5U2VlbltyZXZlcnNlXSkge1xuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFscmVhZHlTZWVuW2tleV0gPSB0cnVlXG4gICAgICAgIGFscmVhZHlTZWVuW3JldmVyc2VdID0gdHJ1ZVxuICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgfVxuICAgIH0sXG4gIClcbn1cblxuY29uc3QgZ2V0TWFnZW50YU5vZGUgPSAoaWQ6IHN0cmluZykgPT4gKHtcbiAgaWQsXG4gIGNvbG9yOiAnbWFnZW50YScsXG59KVxuXG5jb25zdCBnZXRHcmVlbk5vZGUgPSAoaWQ6IHN0cmluZykgPT4gKHtcbiAgaWQsXG4gIGNvbG9yOiAnZ3JlZW4nLFxufSlcblxuY29uc3QgZ2V0QWRqYWNlbnRXb3JkcyA9IChcbiAgd29yZFdpdGhOb1NwYWNlczogc3RyaW5nLFxuICBzdWJXb3JkTWFwcGVkVG9Db21wb3VuZFdvcmRzOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZ1tdIH0sXG4pID0+IHtcbiAgbGV0IGFkamFjZW50V29yZHMgPSBzdWJXb3JkTWFwcGVkVG9Db21wb3VuZFdvcmRzW3dvcmRXaXRoTm9TcGFjZXNdXG4gIGlmIChhZGphY2VudFdvcmRzKSB7XG4gICAgcmV0dXJuIHVuaXEoWy4uLmFkamFjZW50V29yZHMsIHdvcmRXaXRoTm9TcGFjZXNdKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBbXVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBnZXRHcmFwaERhdGFGb3JDb21wb3VuZFdvcmQgPSAoXG4gIGNvbXBvdW5kV29yZDogc3RyaW5nLFxuICB3b3Jkc1dpdGhvdXRTcGFjZXNNYXBwZWRUb0NvbXBvdW5kV29yZHM6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nW10gfSxcbik6IEdyYXBoRGF0YSA9PiB7XG4gIGNvbnN0IGFkamFjZW50V29yZHMgPSBbXG4gICAgLi4uZmxhdHRlbihcbiAgICAgIGNvbXBvdW5kV29yZFxuICAgICAgICAuc3BsaXQoJyAnKVxuICAgICAgICAubWFwKCh4KSA9PlxuICAgICAgICAgIGdldEFkamFjZW50V29yZHMoeCwgd29yZHNXaXRob3V0U3BhY2VzTWFwcGVkVG9Db21wb3VuZFdvcmRzKSxcbiAgICAgICAgKSxcbiAgICApLFxuICAgIGNvbXBvdW5kV29yZCxcbiAgXVxuICBsZXQgbGlua3M6IEdyYXBoTGlua1tdID0gW11cblxuICBjb25zdCBjb21wb3VuZFdvcmRzID0gYWRqYWNlbnRXb3Jkcy5maWx0ZXIoXG4gICAgKHdvcmRUZXh0KSA9PiB3b3JkVGV4dC5zcGxpdCgnICcpLmxlbmd0aCAhPT0gMSxcbiAgKVxuICBjb25zdCBzaW5ndWxhcldvcmRzID0gYWRqYWNlbnRXb3Jkcy5maWx0ZXIoXG4gICAgKHdvcmRUZXh0KSA9PiB3b3JkVGV4dC5zcGxpdCgnICcpLmxlbmd0aCA9PT0gMSxcbiAgKVxuICBjb25zdCBjb21wb3VuZE5vZGVzID0gY29tcG91bmRXb3Jkcy5tYXAoKHdvcmRUZXh0KSA9PiB7XG4gICAgY29uc3QgaGlkZGVuQWRqYWNlbnROb2RlcyA9IHdvcmRUZXh0XG4gICAgICAuc3BsaXQoJyAnKVxuICAgICAgLm1hcCgodikgPT5cbiAgICAgICAgZ2V0QWRqYWNlbnRXb3Jkcyh2LCB3b3Jkc1dpdGhvdXRTcGFjZXNNYXBwZWRUb0NvbXBvdW5kV29yZHMpLmZpbHRlcihcbiAgICAgICAgICAoYWRqKSA9PiAhYWRqYWNlbnRXb3Jkcy5pbmNsdWRlcyhhZGopLFxuICAgICAgICApLFxuICAgICAgKVxuICAgIHJldHVybiB7IC4uLmdldEdyZWVuTm9kZSh3b3JkVGV4dCksIGhpZGRlbkFkamFjZW50Tm9kZXMgfVxuICB9KVxuXG4gIGNvbnN0IG5vZGVzID0gWy4uLnNpbmd1bGFyV29yZHMubWFwKGdldE1hZ2VudGFOb2RlKSwgLi4uY29tcG91bmROb2Rlc11cblxuICBhZGphY2VudFdvcmRzLmZvckVhY2goKHdvcmQpID0+IHtcbiAgICBjb25zdCBzdWJ3b3JkcyA9IHdvcmQuc3BsaXQoJyAnKVxuXG4gICAgY29uc3Qgb3RoZXJXb3Jkc1NoYXJpbmdTdWJ3b3JkcyA9IGZsYXR0ZW4oXG4gICAgICBzdWJ3b3Jkcy5tYXAoKHN1YikgPT4ge1xuICAgICAgICBjb25zdCBvdGhlcldvcmRzV2l0aFN1Yjogc3RyaW5nW10gPSBhZGphY2VudFdvcmRzLmZpbHRlcihcbiAgICAgICAgICAodGFyZ2V0KSA9PiB0YXJnZXQgPT09IHN1YixcbiAgICAgICAgKVxuICAgICAgICByZXR1cm4gb3RoZXJXb3Jkc1dpdGhTdWIubWFwKChvdGhlcldvcmQpID0+ICh7XG4gICAgICAgICAgc291cmNlOiB3b3JkLFxuICAgICAgICAgIHRhcmdldDogb3RoZXJXb3JkLFxuICAgICAgICB9KSlcbiAgICAgIH0pLFxuICAgICkuZmlsdGVyKCh7IHNvdXJjZSwgdGFyZ2V0IH0pID0+IHNvdXJjZSAhPT0gdGFyZ2V0KVxuICAgIGxpbmtzID0gbGlua3MuY29uY2F0KG90aGVyV29yZHNTaGFyaW5nU3Vid29yZHMpXG4gIH0pXG4gIGNvbnN0IHVuaXF1ZUxpbmtzID0gZmlsdGVyVW5pcXVlTGlua3MobGlua3MpXG5cbiAgcmV0dXJuIHsgbGlua3M6IHVuaXF1ZUxpbmtzLCBub2RlcyB9XG59XG4iXSwidmVyc2lvbiI6M30=